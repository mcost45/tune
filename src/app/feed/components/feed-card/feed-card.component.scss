@use 'sass:math';
@use '../../../../vars' as vars;

:host {
	will-change: transform, opacity;
	position: absolute;
	box-sizing: border-box;
	height: min(#{vars.$feed-card-height}, 100%);
	width: min(#{vars.$feed-card-width}, 100%);
	contain: layout;
	padding: vars.$feed-card-padding;
	transition-property: transform, opacity;
	transition-timing-function: ease-in;
	pointer-events: auto;
	transform: perspective(none) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
}

.card-wrapper {
	display: flex;
	position: relative;
	width: 100%;
	height: 100%;
	align-items: flex-end;
	margin: 0;
	border-radius: vars.$border-radius;
	overflow: hidden;
	pointer-events: none;
	box-shadow: vars.$feed-card-box-shadow;
}

.track-image {
	position: absolute;
	width: 100%;
	height: 100%;
	background-position: center;
	background-size: cover;
	image-rendering: pixelated;
	image-rendering: crisp-edges;
	filter: saturate(vars.$feed-card-track-image-saturation)
		contrast(vars.$feed-card-track-image-contrast)
		brightness(vars.$feed-card-track-image-brightness);

	.overlay-colour-fade {
		position: absolute;
		width: 100%;
		height: 100%;
	}

	.overlay-shadow {
		position: absolute;
		width: 100%;
		height: 100%;
		background-image: vars.$feed-card-track-image-overlay-shadow;
	}
}

.content-wrapper {
	contain: content;
	display: block;
	width: 100%;
	max-height: 100%;
	overflow-x: hidden;
	overflow-y: auto;

	&.is-first {
		backdrop-filter: blur(vars.$feed-card-track-image-blur);
	}

	.title {
		display: inline-block;
		width: 100%;
		padding-bottom: vars.$feed-card-title-y-padding;
		color: vars.$feed-card-text-colour;
	}

	.subtitle {
		display: flex;
		flex-direction: row;
		align-items: center;
		padding: vars.$feed-card-subtitle-y-padding 0;
		font-size: 1.3em;
		gap: vars.$feed-card-subtitle-gap;
		color: vars.$feed-card-text-colour;

		.artist-image {
			will-change: transform;
			aspect-ratio: 1;
			border-radius: 50%;
			object-fit: cover;
			width: vars.$feed-card-artist-image-size;
			background: vars.$placeholder-colour;

			&.is-first {
				animation-name: spin;
				animation-duration: 5000ms;
				animation-iteration-count: infinite;
				animation-timing-function: linear;
			}
		}
	}

	.categories {
		display: flex;
		flex-direction: row;
		flex-wrap: wrap;
		gap: vars.$feed-card-category-gap;
		padding-bottom: vars.$feed-card-category-y-padding;

		.category {
			font-size: 1.1em;
			border: 1px currentColor solid;
			border-radius: vars.$border-radius;
			padding: vars.$feed-card-category-gap 1.5 * vars.$feed-card-category-gap;
			color: vars.$feed-card-text-colour;
		}
	}

	ion-progress-bar {
		height: vars.$feed-card-progress-height;

		&::part(progress) {
			will-change: transform;
			transition-duration: vars.$feed-card-progress-transition-duration;
			height: vars.$feed-card-progress-height + 2;
		}
	}
}
